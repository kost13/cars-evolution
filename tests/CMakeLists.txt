cmake_minimum_required(VERSION 3.1)

if(WIN32)
    if(NOT BOOST_DIR)
        message(FATAL_ERROR " Set BOOST_DIR with path to boost root dir e.g. C:/boost")
    else()
        set(Boost_INCLUDE_DIRS ${BOOST_DIR})
    endif()
    if(CMAKE_BUILD_TYPE MATCHES Debug)
        if(NOT BOOST_TEST_LIB_DEBUG)
            message(FATAL_ERROR " Set BOOST_TEST_LIB_DEBUG with path to boost unit test debug library e.g. C:/boost/lib/libboost_unit_test_framework-vc140-mt-gd-x64-1_72.lib")
        else()
            set(Boost_UNIT_TEST_FRAMEWORK_LIBRARY ${BOOST_TEST_LIB_DEBUG})
        endif()
    else()
        if(NOT BOOST_TEST_LIB_RELEASE)
            message(FATAL_ERROR " Set BOOST_TEST_LIB_RELEASE with path to boost unit test library e.g. C:/boost/lib/libboost_unit_test_framework-vc140-mt-x64-1_72.lib")
        else()
            set(Boost_UNIT_TEST_FRAMEWORK_LIBRARY ${BOOST_TEST_LIB_RELEASE})
        endif()
    endif()
else()
    find_package(Boost COMPONENTS unit_test_framework REQUIRED)
    add_definitions(-DBOOST_TEST_DYN_LINK)
endif()

include_directories(${Boost_INCLUDE_DIRS})

include_directories(../src)


if(CMAKE_BUILD_TYPE MATCHES Debug AND CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_CXX_FLAGS "-g -O0 -Wall -fprofile-arcs -ftest-coverage")
    SET(CMAKE_C_FLAGS "-g -O0 -Wall -W -fprofile-arcs -ftest-coverage")
    SET(CMAKE_EXE_LINKER_FLAGS "-fprofile-arcs -ftest-coverage")
endif()

set(UNIT_TESTS unit_tests)
add_executable(${UNIT_TESTS} Main.cc CarsEvolutionCoreTests.cc PhysicsTests.cc EvolutionTests.cc)
target_link_libraries(${UNIT_TESTS} PRIVATE CarsEvolutionCore ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})

set(INTEGRATION_TESTS integration_tests)
add_executable(${INTEGRATION_TESTS} IntegrationTests.cc)
target_link_libraries(${INTEGRATION_TESTS} PRIVATE CarsEvolutionCore ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})

